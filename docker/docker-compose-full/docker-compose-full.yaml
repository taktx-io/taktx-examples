version: "3.9"
services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9095:9095' #1
      - '9094:9094' #1
      - '9092:9092' #1
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_CONTROLLER_BROKER_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094,CONTROLLER://:9093,EXTERNAL://:9092,DOCKER://:9095
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9094,EXTERNAL://localhost:9092,DOCKER://host.docker.internal:9095
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
# If you want to persist data on the host locally, uncomment the following lines
#    volumes:
#      - ./kafka/data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 1s

  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8085:8080'
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local #5
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9094 #6
      - KAFKA_CLUSTERS_0_PROPERTIES_CONSUMER_KEY_DESERIALIZER=org.apache.kafka.common.serialization.HexDeserializer
      - KAFKA_CLUSTERS_0_PROPERTIES_CONSUMER_VALUE_DESERIALIZER=org.apache.kafka.common.serialization.HexDeserializer
      - KAFKA_CLUSTERS_0_PROPERTIES_PRODUCER_KEY_SERIALIZER=org.apache.kafka.common.serialization.HexSerializer
      - KAFKA_CLUSTERS_0_PROPERTIES_PRODUCER_VALUE_SERIALIZER=org.apache.kafka.common.serialization.HexSerializer

  taktx:
    image: ghcr.io/taktx-io/taktx-engine:0.0.8-alpha-10
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
        - KAFKA_BOOTSTRAP_SERVERS=kafka:9094
        - TAKTX_NAMESPACE=namespace
        - TAKTX_LICENSE_FILE_LOCATION=/opt/taktx/licence.lic
    volumes:
      - ~/.taktx/license.lic:/opt/taktx/licence.lic:ro

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - "./grafana/data:/var/lib/grafana"
      - "./grafana/provisioning:/etc/grafana/provisioning"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin