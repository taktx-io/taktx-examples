[versions]
quarkus = "3.28.4"
jackson = "2.19.2"
cronutils = "9.2.1"
lombok = "1.18.42"
junit = "5.10.1"
assertj = "3.27.6"
mapstruct = "1.6.3"
slf4j = "2.0.17"
kafka = "4.1.0"
camunda-feel = "1.19.3"
awaitility = "4.3.0"
mockito = "3.12.4"
reflections = "0.10.2"
jaxb = "3.0.2"
license3j = "3.3.0"
classgraph = "4.8.184"
jakarta-cdi = "4.1.0"
jakarta-inject = "2.0.1"
jakarta-annotation = "3.0.0"
taktx = "0.0.8-alpha-8"

[libraries]
# Quarkus dependencies
quarkus-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkus" }
quarkus-camel-bom = { module = "io.quarkus.platform:quarkus-camel-bom", version.ref = "quarkus" }
quarkus-kafka-streams = { module = "io.quarkus:quarkus-kafka-streams" }
quarkus-jaxb = { module = "io.quarkus:quarkus-jaxb" }
quarkus-resteasy-client = { module = "io.quarkus:quarkus-resteasy-client" }
quarkus-micrometer = { module = "io.quarkus:quarkus-micrometer" }
quarkus-micrometer-registry-prometheus = { module = "io.quarkus:quarkus-micrometer-registry-prometheus" }
quarkus-kafka-client = { module = "io.quarkus:quarkus-kafka-client" }
quarkus-junit5 = { module = "io.quarkus:quarkus-junit5" }
quarkus-junit5-mockito = { module = "io.quarkus:quarkus-junit5-mockito" }
quarkus-jacoco = { module = "io.quarkus:quarkus-jacoco" }
quarkus-core = { module = "io.quarkus:quarkus-core", version.ref = "quarkus" }
quarkus-arc = { module = "io.quarkus:quarkus-arc", version.ref = "quarkus" }
quarkus-scheduler = { module = "io.quarkus:quarkus-scheduler", version.ref = "quarkus" }
quarkus-smallrye-openapi = { module = "io.quarkus:quarkus-smallrye-openapi", version.ref = "quarkus" }
quarkus-swagger-ui = { module = "io.quarkus:quarkus-swagger-ui", version.ref = "quarkus" }
quarkus-resteasy-jackson = { module = "io.quarkus:quarkus-resteasy-jackson", version.ref = "quarkus" }
quarkus-jackson = { module = "io.quarkus:quarkus-jackson", version.ref = "quarkus" }

# Taktx
taktx-client = { module = "io.taktx:taktx-client", version.ref= "taktx" }
taktx-client-quarkus = { module = "io.taktx:taktx-client-quarkus", version.ref= "taktx" }

# Jackson
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-cbor = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor", version.ref = "jackson" }

# Utility libraries
cronutils = { module = "com.cronutils:cron-utils", version.ref = "cronutils" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
camunda-feel = { module = "org.camunda.feel:feel-engine", version.ref = "camunda-feel" }
license3j = { module = "com.javax0.license3j:license3j", version.ref = "license3j" }
kafka-clients = { module = "org.apache.kafka:kafka-clients", version.ref = "kafka" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
jakarta-cdi-api = { module = "jakarta.enterprise:jakarta.enterprise.cdi-api", version.ref = "jakarta-cdi" }
jakarta-inject-api = { module = "jakarta.inject:jakarta.inject-api", version.ref = "jakarta-inject" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }

# Testing
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
testcontainers-kafka = { module = "org.testcontainers:kafka" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
jaxb-runtime = { module = "org.glassfish.jaxb:jaxb-runtime", version.ref = "jaxb" }

[plugins]
quarkus = { id = "io.quarkus", version.ref = "quarkus" }
jib = { id = "com.google.cloud.tools.jib", version = "3.4.4" }
spotless = { id = "com.diffplug.spotless", version = "6.25.0" }
xjc = { id = "com.github.bjornvester.xjc", version = "1.8.1" }

